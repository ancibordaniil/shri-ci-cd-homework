name: Fix Release

on:
    workflow_dispatch:
        inputs:
            version:
                description: "–í–µ—Ä—Å–∏—è —Ä–µ–ª–∏–∑–∞"
                required: true

jobs:
    fix:
        runs-on: ubuntu-latest
        env:
            REGISTRY: cr.yandex/${{ secrets.YC_REGISTRY_ID }}/app
            VERSION: ${{ github.event.inputs.version }}
            FIX: ${{ github.run_number }}
            REGISTRY_ID: ${{ secrets.YC_REGISTRY_ID }}
            IMAGE_NAME: app
        steps:
            - uses: actions/checkout@v4

            - name: Setup Node
              uses: actions/setup-node@v4
              with:
                  node-version: 18

            - run: npm ci
            - run: npm run test

            - name: Build Docker (Fix)
              run: docker build -t $REGISTRY:${VERSION}_fix${FIX} -t $REGISTRY:${VERSION}_latest .

            - name: Install Yandex Cloud CLI
              run: |
                  curl https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash
                  echo "$HOME/yandex-cloud/bin" >> $GITHUB_PATH

            - name: Authenticate YC CLI
              run: |
                  yc config set token "${{ secrets.YC_OAUTH_TOKEN }}"
                  yc config set cloud-id "${{ secrets.YC_CLOUD_ID }}"
                  yc config set folder-id "${{ secrets.YC_FOLDER_ID }}"

            - name: Tag Docker image with full registry path (–±–µ–∑ .ru!)
              run: |
                  docker tag $IMAGE_NAME cr.yandex/${{ env.REGISTRY_ID }}/$IMAGE_NAME:${{ env.VERSION }}
                  docker tag $IMAGE_NAME cr.yandex/${{ env.REGISTRY_ID }}/$IMAGE_NAME:${{ env.VERSION }}_latest

            - name: Push Docker images to Yandex Container Registry
              run: |
                  docker push cr.yandex/${{ env.REGISTRY_ID }}/$IMAGE_NAME:${{ env.VERSION }}
                  docker push cr.yandex/${{ env.REGISTRY_ID }}/$IMAGE_NAME:${{ env.VERSION }}_latest

            - name: Append to issue
              run: |
                  gh issue comment <–Ω–æ–º–µ—Ä_—Ä–µ–ª–∏–∑–Ω–æ–≥–æ_issue> \
                    --body "**–§–∏–∫—Å –æ—Ç $(date)**\n–ê–≤—Ç–æ—Ä: ${{ github.actor }}\nDocker: $REGISTRY:${VERSION}_fix${FIX}"

            - name: –ù–∞–π—Ç–∏ –Ω–æ–º–µ—Ä issue –ø–æ –∑–∞–≥–æ–ª–æ–≤–∫—É (–≤–µ—Ä—Å–∏–∏)
              id: find_issue
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: |
                  VERSION="${{ github.event.inputs.version }}"
                  if ! command -v gh &> /dev/null; then
                  echo "gh cli –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, —Å—Ç–∞–≤–∏–º..."
                  curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
                  sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg
                  echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
                  sudo apt update
                  sudo apt install gh -y
                  fi

                  ISSUE_NUMBER=$(gh issue list --repo ${{ github.repository }} --state open --json number,title --limit 100 \
                  | jq -r --arg ver "$VERSION" '.[] | select(.title==$ver) | .number')

                  if [ -z "$ISSUE_NUMBER" ]; then
                  echo "–û—à–∏–±–∫–∞: Issue —Å –∑–∞–≥–æ–ª–æ–≤–∫–æ–º '$VERSION' –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
                  exit 1
                  fi

                  echo "–ù–∞–π–¥–µ–Ω issue –Ω–æ–º–µ—Ä: $ISSUE_NUMBER"
                  echo "issue_number=$ISSUE_NUMBER" >> $GITHUB_OUTPUT

            - name: –ü–æ–ª—É—á–∏—Ç—å –¥–∞—Ç—É
              id: date
              run: echo "DATE=$(date +%F)" >> $GITHUB_OUTPUT

            - name: üìä –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –≤ GitHub Issue
              uses: peter-evans/create-or-update-comment@v4
              with:
                  token: ${{ github.token }}
                  issue-number: ${{ steps.find_issue.outputs.issue_number }}
                  body: |
                      –§–∏–∫—Å:
                      üåê –†–µ–ª–∏–∑ **${{ github.event.inputs.version }}** fixed
                      üìÖ –î–∞—Ç–∞: ${{ steps.date.outputs.DATE }}
                      üë§ –ê–≤—Ç–æ—Ä: @${{ github.actor }}  
                      üì¶ –û–±—Ä–∞–∑: `${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}_latest`
