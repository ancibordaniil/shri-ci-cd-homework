name: CI/CD Deploy to Prod

on:
    workflow_dispatch:
        inputs:
            version:
                description: "Версия образа"
                required: true

jobs:
    build-and-deploy:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout repository
              uses: actions/checkout@v3

            - name: Login to Yandex Container Registry (locally in CI)
              id: yc_login
              run: |
                  printf "%s" "${{ secrets.YC_SERVICE_KEY }}" > sa-key.json
                  YC_TOKEN=$(yc iam create-token --service-account-key sa-key.json)
                  echo "token=$YC_TOKEN" >> $GITHUB_OUTPUT
              env:
                  YC_SERVICE_KEY: ${{ secrets.YC_SERVICE_KEY }}

            - name: Build Docker image
              run: |
                  docker build -t app .

            - name: Tag Docker image
              run: |
                  docker tag app cr.yandex/${{ secrets.YC_REGISTRY_ID }}/app:${{ github.event.inputs.version }}_latest

            - name: Push Docker image
              run: |
                  docker push cr.yandex/${{ secrets.YC_REGISTRY_ID }}/app:${{ github.event.inputs.version }}_latest

            - name: Deploy to VM over SSH
              uses: appleboy/ssh-action@v0.1.7
              with:
                  host: ${{ secrets.VM_IP }}
                  username: ${{ secrets.VM_SSH_USER }}
                  key: ${{ secrets.VM_SSH_KEY }}
                  script: |
                      echo "${{ steps.yc_login.outputs.token }}" | docker login -u oauth --password-stdin cr.yandex
                      docker pull cr.yandex/${{ secrets.YC_REGISTRY_ID }}/app:${{ github.event.inputs.version }}_latest
                      docker stop app || true
                      docker rm app || true
                      docker run -d --name app -p 80:3000 cr.yandex/${{ secrets.YC_REGISTRY_ID }}/app:${{ github.event.inputs.version }}_latest
